apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'antlr'

ext.antlr = [
        generatedDir:   'src/gen',
        destinationDir: 'src/gen/java'
]

compileJava.options.encoding = 'utf-8'
compileTestJava.options.encoding = 'utf-8'

eclipse {
  jdt {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    file {
      File dir = file('.settings')
      dir.mkdirs()
      
      File f = file('.settings/org.eclipse.core.resources.prefs')
	  f.write('eclipse.preferences.version=1\n')
	  f.append('encoding/<project>=utf-8')
    }
  }
}


cleanEclipse.doLast {
    File f = file('.settings/org.eclipse.core.resources.prefs')
    f.delete()
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir
        generatedSourceDirs += file(antlr.destinationDir)
    }
}

repositories {
    jcenter()
}

dependencies {
    compile 'guru.nidi:graphviz-java:0.8.3', 'ch.qos.logback:logback-classic:1.2.3'
    compile group: 'com.google.guava', name: 'guava', version: '27.0.1-jre'
    compile group: 'org.eclipse.jdt', name: 'org.eclipse.jdt.core', version: '3.17.0'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.6'
    antlr group: 'org.antlr', name: 'antlr4', version: '4.7.2'
    compile group: 'org.ow2.asm', name: 'asm', version: '7.1'
    testCompile 'junit:junit:4.12', 'org.hamcrest:hamcrest-all:1.3', 'dk.brics:automaton:1.12-1'
}

sourceSets {
    main.java.srcDir 'src/main/java'
    main.java.srcDir antlr.destinationDir
    test.java.srcDir 'src/test/java'
}

generateGrammarSource {
    outputDirectory = file(antlr.destinationDir)
    arguments += ['-visitor']
}

task run(type: JavaExec, dependsOn: classes) {
    main 'Main'
    classpath sourceSets.main.runtimeClasspath
}

clean {
    delete antlr.generatedDir
}
